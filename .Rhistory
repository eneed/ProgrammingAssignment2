list.files()
?list.files
args(list.files())
args(list.files
)
old.dir<-getwd()
dir.create(~/testdir)
dir.create(testdir)
dir.create(/Users/eneed/testdir)
dir.create("/Users/eneed/testdir")
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exist('mytest.R')
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
unlink('testdir2', recursive = TRUE)
setwd(old.dir)
unlink('testdir')
unlink('testdir', recursive = TRUE)
swirl()
1:20
pi:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
swirl
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-numvect <1
tf<-num_vect <1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse =  " ")
my_name<-c(my_char, "Emily")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paster(LETTERS,1:4,sep="-")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-norm(1000)
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
names(vevt)
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean()
dget("Users/eneed/Downloads/specdata")
dget("/Users/eneed/Downloads/specdata")
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 >3.9
isTRUE(6>4)
identical("twins","twins")
xor(5==6,FALSE)
xor(5==6,!FALSE)
ints <-sample(10)
ints
ints >5
which(ints>7)
any(ints <0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit
submit()
paste("hell","is","real")
telegram("hell","is","real")
submit()
mad_libs(c("place"=home,"adjective"=lousy,"noun"=beaver))
mad_libs(c("place"="home","adjective"="lousy","noun"="beaver"))
submit()
"I"%p%"love"%p%"R!"
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colos<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3, 4, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5,6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
myfiles
myfiles<-pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate")
source('~/Downloads/specdata/complete.R')
complete("~/Download/specdata")
complete("~/Downloads/specdata")
is.na(myfiles)
temp = list.files(path="~/Downloads/specdata", pattern="*.csv")
files = paste(directory,temp,sep="/")
files = paste("~/Downloads/specdata",temp,sep="/")
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
is.na(myfiles)
myfiles[!is.na(myfiles)]
myfiles[1]
myfiles[2]
!is.na(myfile2[2])
!is.na(myfiles[2])
if(!is.na(myfiles[2]) & !is.na(myfiles[3]))
TRUE
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
finalfiles<-complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
finalfiles<-complete("~/Downloads/specdata")
finalfiles
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
myfiles[!is.na(myfiles[2])]
myfiles$ID[finalfiles]
myfiles$ID
anyNA(myfiles$ID)
myfiles$ID[!is.na(myfiles[2]) && !is.na(myfiles[3])]
!is.na(myfiles[2]) && !is.na(myfiles[3])
head(myfiles[!is.na(myfiles[2])])
head(myfiles[!is.na(myfiles[3])])
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
myfiles[!is.na(myfiles[2])]
dim(myfiles[!is.na(myfiles[2])])
length(myfiles[!is.na(myfiles[2])])
length(myfiles$ID[!is.na(myfiles[2])])
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/complete.R')
complete("~/Downloads/specdata")
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate",1:10)
source('~/Downloads/specdata/pollutantmean.R')
pollutantmean("~/Downloads/specdata","sulfate",1:10)
tester<-pollutantmean("~/Downloads/specdata","sulfate",1:10)
mean(tester)
source('~/Downloads/specdata/pollutantmean.R')
tester<-pollutantmean("~/Downloads/specdata","nitrate",1:10)
mean(tester)
View(myfiles)
tester<-pollutantmean("~/Downloads/specdata","sulfate",1:10)
sum(tester)
35.82/10
tester<-pollutantmean("~/Downloads/specdata","nitrate",70:72)
mean(tester)
source('~/Downloads/specdata/pollutantmean.R')
tester<-pollutantmean("~/Downloads/specdata","nitrate",70:72)
source('~/Downloads/specdata/pollutantmean.R')
tester<-pollutantmean("~/Downloads/specdata","nitrate",70:72)
temp[1:10]
source('~/corr.R')
source('~/complete.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
source('~/corr.R')
corr("specdata",1000)
cr <- corr("specdata", 150)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source('~/corr.R')
submit()
submit()
source('~/corr.R')
submit()
source('~/corr.R')
submit()
library(datasets)
data("iris")
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
data("mtcars")
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp,cyl, mean))
209.21429-82.63636
debug(ls)
ls
getwd()
setwd("~/ProgrammingAssignment2/")
getwd()
ls
undebug(ls)
isdebugged(ls)
ls
ls()
getwd()
q <-c(1:6)
dim(q)<-c(2,3)
q
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
qcahce
qcache
class(M)
class(m)
class(q)
qcache <- makeCacheMatrix(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
is.atomic(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
cache
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
cache <-cacheSolve(qcache)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
z = c(1:10)
qcache <- makeCacheMatrix(z)
cache <-cacheSolve(z)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
q <-c(1:16)
dim(q) <-c(4,4)
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
class(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cache <-cacheSolve(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
q <- c(12,71,32,3,4,0,0,1,4,8,3,9,11,13,5,6)
dim(q) <-c(4,4)
qcache <- makeCacheMatrix(q)
cache <-cacheSolve(q)
cache
cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(q)
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(q)
cacheSolve(makeCacheMatrix(q))
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(q))
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(q))
cacheSolve(makeCacheMatrix(q))
cache <-cacheSolve(makeCacheMatrix(q))
cacheSolve(makeCacheMatrix(q))
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(qcache)
cacheSolve(qcache)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve(qcache)
qcache <- makeCacheMatrix(q)
cacheSolve(qcache)
source('~/ProgrammingAssignment2/cachematrix.R')
qcache <- makeCacheMatrix(q)
cacheSolve(qcache)
